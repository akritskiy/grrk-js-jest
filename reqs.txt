Constraints:
   C1. The team CAN add new code
   C2. The team CAN change the updateQuality method
   C3. The team CANNOT change the Item class
   C4. The team CANNOT change the items prop in Shop
   
   "...as those belong to the goblin in the corner who will insta-rage and one-shot you as he doesn't believe in shared code ownership..."

Basic system requirements (BSR):
   BSR1. All items have a sellIn prop which denotes the number of days until the item expires
   BSR2. All items have a quality prop which denotes its value
   BSR3. At the end of each day, the system lowers both values for each item in the shop by running the updateQuality method.

Exceptions:
   E1. Once the sell by date has passed, Quality degrades twice as fast. Means: if sellIn == 0, running updateQuality decreases quality by 2, not 1.
   E2. The Quality of an item is never negative
   E3. Aged Brie actually increases in Quality the older it gets. Means: The quality of Aged Brie increases over time, presumably by +1, and +2 after the sell-by date.
   E4. The Quality of an item is never more than 50. Means: Have to ensure the two items that increase in value, Aged Brie and Backstage passes, never increase above 50.
   E5. "Sulfuras", being a legendary item, never has to be sold or decreases in Quality
   E6. "Backstage passes", like aged brie, increases in Quality as its SellIn value approaches; Quality increases by 2 when there are 10 days or less and by 3 when there are 5 days or less, but the Quality drops to 0 after the concert
   E7. An item can never have its Quality increase above 50
   E8. "Sulfuras" is a legendary item and as such its Quality is 80 and it never alters

Conjured:
   We have recently signed a supplier of conjured items. This requires an update to our system:
   CONJ1. "Conjured" items degrade in Quality twice as fast as normal items